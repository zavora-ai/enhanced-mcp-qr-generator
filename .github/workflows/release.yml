name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release type (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          always-auth: true
      
      - name: Install dependencies
        run: npm ci
      
      - name: Update version
        run: node scripts/version.js ${{ github.event.inputs.version }}

      # Extract the new version for later steps
      - name: Extract version
        id: extract_version
        run: echo "version=$(node -p \"require('./package.json').version\")" >> "$GITHUB_OUTPUT"
      
      - name: Build
        run: npm run build

      # Publish the new version to npm
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Configure Git
        run: |
          git config --local user.email "james.karanja@zavora.ai"
          git config --local user.name "James Karanja"
      
      - name: Commit version bump
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${VERSION}"
          # Only create tag if it doesn't already exist
          if git rev-parse --verify "refs/tags/v${VERSION}" >/dev/null 2>&1; then
            echo "Tag v${VERSION} already exists, skipping tag creation"
          else
            git tag -a "v${VERSION}" -m "Release v${VERSION}"
          fi
      
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
      
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          generate_release_notes: true
